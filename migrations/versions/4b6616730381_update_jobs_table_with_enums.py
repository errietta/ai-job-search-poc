"""update jobs table with enums

Revision ID: 4b6616730381
Revises: 9e1b59306408
Create Date: 2025-06-09 21:32:05.218754

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4b6616730381"
down_revision: Union[str, None] = "9e1b59306408"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "jobs", sa.Column("company_employee_count", sa.Integer(), nullable=True)
    )
    op.add_column("jobs", sa.Column("location", sa.String(), nullable=True))
    op.add_column("jobs", sa.Column("description", sa.String(), nullable=True))
    op.add_column("jobs", sa.Column("salary", sa.String(), nullable=True))
    op.add_column("jobs", sa.Column("url", sa.String(), nullable=True))
    op.add_column("jobs", sa.Column("date_posted", sa.String(), nullable=True))
    op.add_column("jobs", sa.Column("job_type", sa.String(), nullable=True))
    # Create enums before using them in columns
    experience_level_enum = sa.Enum(
        "entry_level",
        "mid_level",
        "senior_level",
        "director",
        "executive",
        "internship",
        "other",
        name="experiencelevelenum",
    )
    employment_type_enum = sa.Enum(
        "full_time", "part_time", "contract", name="employmenttypeenum"
    )
    experience_level_enum.create(op.get_bind(), checkfirst=True)
    employment_type_enum.create(op.get_bind(), checkfirst=True)
    op.add_column(
        "jobs", sa.Column("experience_level", experience_level_enum, nullable=True)
    )
    op.add_column(
        "jobs", sa.Column("employment_type", employment_type_enum, nullable=True)
    )
    op.add_column("jobs", sa.Column("remote", sa.Boolean(), nullable=True))
    op.add_column("jobs", sa.Column("hybrid", sa.Boolean(), nullable=True))
    op.add_column("jobs", sa.Column("industry", sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("jobs", "industry")
    op.drop_column("jobs", "hybrid")
    op.drop_column("jobs", "remote")
    op.drop_column("jobs", "employment_type")
    op.drop_column("jobs", "experience_level")
    op.drop_column("jobs", "job_type")
    op.drop_column("jobs", "date_posted")
    op.drop_column("jobs", "url")
    op.drop_column("jobs", "salary")
    op.drop_column("jobs", "description")
    op.drop_column("jobs", "location")
    op.drop_column("jobs", "company_employee_count")
    # Drop enums after columns are removed
    employment_type_enum = sa.Enum(
        "full_time", "part_time", "contract", name="employmenttypeenum"
    )
    experience_level_enum = sa.Enum(
        "entry_level",
        "mid_level",
        "senior_level",
        "director",
        "executive",
        "internship",
        "other",
        name="experiencelevelenum",
    )
    employment_type_enum.drop(op.get_bind(), checkfirst=True)
    experience_level_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
